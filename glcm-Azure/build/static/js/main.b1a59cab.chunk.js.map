{"version":3,"sources":["Glcm.js","MakeRandomMatrix.js","GlcmProperties.js","SetMatrix.js","App.js","reportWebVitals.js","index.js"],"names":["Glcm","params","useState","glcmArray","forceUpdate","setForceUpdate","matrix","i","j","c","r","degreeValue","randomMatrix","length","distanceValue","undefined","assign","initialInputColour","ii","innerInputColour","jj","push","inputColour","setInputColour","w","q","GlcmColour","findColoured","id","onClick","arr","setGlcmColour","assign0ToOutputColour","array","innerColourGlcm","assign0ToInputColour","className","style","map","item","index","key","innerItem","innerIndex","string","bgcolor","newColourMatrix","hexValues","hex","Math","floor","random","changeColour","MakeRandomMatrix","x","y","generatedArray","innerArray","GlcmProperties","align","diameter","min","max","step","value","theme","defaultColor","activeColor","onValueChange","setDegreeValue","ariaLabelledBy","cols","rows","setDistanceValue","SetMatrix","type","onChange","customRows","htmlFor","customCols","setMatrix","App","setRows","setCols","setDistnceValue","colourGlcm","setRandomMatrix","event","num","parseInt","target","isNaN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1a59cab.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nvar Glcm=(params)=>{\n    var [glcmArray,setGlcmArray]=useState( [ \n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0]\n    ]);\n    var [forceUpdate,setForceUpdate]=useState(0);\n    var assign0=()=>{\n        glcmArray= [ \n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0]\n        ]\n    }\n   \n\n    var changeColour=(index,innerIndex)=>{\n        let newColourMatrix=params.GlcmColour;\n        const hexValues = [0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F'];\n        let hex = '#';\n        for(let i = 0; i < 6; i++){\n            const index = Math.floor(Math.random() * hexValues.length)\n            hex += hexValues[index];\n        }\n        \n        setForceUpdate(forceUpdate===hex?\"\":hex);\n        newColourMatrix[index][innerIndex]=newColourMatrix[index][innerIndex]===\"#FFFFFF\"?hex:\"#FFFFFF\";\n        params.setGlcmColour(newColourMatrix);\n    }\n\n    var assign=(matrix)=>{\n        var i,j,c,r;\n        if(params)\n            if(params.degreeValue===0){\n                for(i=0;i<params.randomMatrix.length;i++)\n                    for(j=0;j<params.randomMatrix[i].length-params.distanceValue+1;j++){\n                        c=params.randomMatrix[i][j];\n                        r=params.randomMatrix[i][j+params.distanceValue-1];\n                        if(c!==undefined)\n                            matrix[r-1][c-1]+=1;\n                    }\n            }\n            else if(params.degreeValue===90){\n                for(i=0;i<params.randomMatrix[0].length;i++)\n                    for(j=0;j<params.randomMatrix.length-params.distanceValue+1;j++){\n                        c=params.randomMatrix[j][i];\n                        r=params.randomMatrix[j+params.distanceValue-1][i];\n                        if(c!==undefined)\n                            matrix[r-1][c-1]+=1;\n                    }\n            }\n            else if(params.degreeValue===45){\n                for(i=params.distanceValue-1;i<params.randomMatrix.length;i++)\n                    for(j=0;j<params.randomMatrix[i].length-params.distanceValue+1;j++){\n                        c=params.randomMatrix[i-params.distanceValue+1][j+params.distanceValue-1];\n                        r=params.randomMatrix[i][j];\n                        if(c!==undefined)\n                            matrix[r-1][c-1]+=1;\n                    }\n            }\n            else if(params.degreeValue===135){\n                for(i=0;i<params.randomMatrix.length-params.distanceValue+1;i++)\n                    for(j=0;j<params.randomMatrix[i].length-params.distanceValue+1;j++){\n                        c=params.randomMatrix[i][j];\n                        r=params.randomMatrix[i+params.distanceValue-1][j+params.distanceValue-1];\n                        if(c!==undefined)\n                            matrix[r-1][c-1]+=1;\n                    }\n            }\n    }\n    assign0();\n    assign(glcmArray);\n    \n    var initialInputColour=[]\n    for(var ii=0;ii<params.randomMatrix.length;ii++){\n        let innerInputColour=[]\n        for(var jj=0;jj<params.randomMatrix[ii].length;jj++){\n            innerInputColour.push(\"#FFFFFF\");\n        }\n        initialInputColour.push(innerInputColour);\n    }\n    var [inputColour, setInputColour]=useState(initialInputColour)\n    var findColoured=()=>{\n        var w,q;\n        for(var i=0;i<8;i++){\n            for(var j=0;j<8;j++){\n                if(params.GlcmColour[i][j]!==\"#FFFFFF\"){\n                    if(params.degreeValue===0){\n                        for(q=0;q<params.randomMatrix.length;q++){\n                            for(w=0;w<params.randomMatrix[q].length-params.distanceValue+1;w++){\n                                if(params.randomMatrix[q][w]===j+1&&params.randomMatrix[q][w+params.distanceValue-1]===i+1){\n                                    inputColour[q][w]=params.GlcmColour[i][j];\n                                    inputColour[q][w+params.distanceValue-1]=params.GlcmColour[i][j];                                    \n                                }\n                            }\n                        }\n                    }\n                    else if(params.degreeValue===90){\n                        for(q=0;q<params.randomMatrix.length-params.distanceValue+1;q++){\n                            for(w=0;w<params.randomMatrix[q].length;w++){\n                                if(params.randomMatrix[q][w]===j+1&&params.randomMatrix[q+params.distanceValue-1][w]===i+1){\n                                    inputColour[q][w]=params.GlcmColour[i][j];\n                                    inputColour[q+params.distanceValue-1][w]=params.GlcmColour[i][j];                                    \n                                }\n                            }\n                        }\n                    }\n                    else if(params.degreeValue===45){\n                        for(q=params.distanceValue-1;q<params.randomMatrix.length;q++){\n                            for(w=0;w<params.randomMatrix[q].length-params.distanceValue+1;w++){\n                                if(params.randomMatrix[q][w]===i+1&&params.randomMatrix[q-params.distanceValue+1][w+params.distanceValue-1]===j+1){\n                                    inputColour[q][w]=params.GlcmColour[i][j];\n                                    inputColour[q-params.distanceValue+1][w+params.distanceValue-1]=params.GlcmColour[i][j];                                    \n                                }\n                            }\n                        }\n                    }\n                    else if(params.degreeValue===135){\n                        for(q=0;q<params.randomMatrix.length-params.distanceValue+1;q++){\n                            for(w=0;w<params.randomMatrix[q].length-params.distanceValue+1;w++){\n                                if(params.randomMatrix[q][w]===j+1&&params.randomMatrix[q+params.distanceValue-1][w+params.distanceValue-1]===i+1){\n                                    inputColour[q][w]=params.GlcmColour[i][j];\n                                    inputColour[q+params.distanceValue-1][w+params.distanceValue-1]=params.GlcmColour[i][j];                                    \n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    findColoured()\n\n    var assign0ToInputColour=(array)=>{\n        for(var ii=0;ii<8;ii++){\n            let innerColourGlcm=[]\n            for(var jj=0;jj<8;jj++)\n                innerColourGlcm.push(`#FFFFFF`)\n            array[ii]=innerColourGlcm;\n        }\n        setInputColour(array);\n    }\n\n    var assign0ToOutputColour=()=>{\n        let arr=params.GlcmColour;\n        for(var i=0;i<arr.length;i++)\n            for(var j=0;j<arr[i].length;j++)\n                arr[i][j]=\"#FFFFFF\"\n        params.setGlcmColour(arr);\n    }\n\n    var clearColour=()=>{\n        assign0ToOutputColour();\n        assign0ToInputColour(inputColour);\n        setForceUpdate(forceUpdate+\"_\")\n\n    }\n\n    return(\n        <div id=\"input\">\n            <div>\n                <div>\n                    <button onClick={clearColour} className=\"btn btn-success align-self-start\">Clear Colours</button>\n                </div>\n            <table style={{'margin':'20px'}}>\n                <tbody>\n                    {params.randomMatrix.map((item,index)=>{\n                        return(\n                            <tr key={index}>\n                                {item.map((innerItem,innerIndex)=>{\n                                    var string=index+\"_\"+innerIndex\n                                    return(\n                                        <td key={string} \n                                            bgcolor={inputColour[index][innerIndex]}\n                                            style={{\"borderWidth\":\"2px\", 'borderColor':\"#000000\", 'borderStyle':'solid','padding':'10px','margin':'0px'}}\n                                        >\n                                            {innerItem}\n                                        </td>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            </div>\n            <div>\n                <table style={{'margin':'20px'}}>\n                    <tbody>\n                        <tr key=\"column_number\">\n                            {\n                                glcmArray[0].map((item,index)=>\n                                    <td key={index} style={{'padding':'10px','margin':'0px'}}>{index+1}</td>\n                                )\n                            }\n                        </tr>\n                        {glcmArray.map((item,index)=>{\n                            return( \n                                <tr key={index}>\n                                    {item.map((innerItem,innerIndex)=>{\n                                        var string=index+\"_\"+innerIndex\n                                        return(\n                                            <td key={string} \n                                                style={{\"borderWidth\":\"2px\", 'borderColor':\"#000000\", 'borderStyle':'solid','padding':'10px','margin':'0px'}}\n                                                bgcolor={params.GlcmColour[index][innerIndex]}\n                                                onClick={()=>changeColour(index,innerIndex)}\n                                            >\n                                                {innerItem}\n                                            </td>\n                                        )\n                                    })}\n                                    <td key=\"row_number\" style={{'padding':'10px','margin':'0px'}}>{index+1}</td>\n\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>    )\n}\n\nexport default Glcm;","var MakeRandomMatrix=(x,y)=>{\n  var generatedArray = []\n  for(var i=0;i<x;i++){\n    var innerArray = []\n    for(var j=0;j<y;j++){\n      innerArray.push(Math.floor(Math.random() * 8) + 1);\n    }\n    generatedArray.push(innerArray)\n  }\n  return generatedArray\n};\n\nexport default MakeRandomMatrix;","import { Basic } from 'react-dial-knob';\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nvar GlcmProperties=(params)=>{\n    return(\n        <div className=\"mt-3 m-sm-5 border p-4 p-sm-5\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2>GLCM Properties</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className='col-2'></div>\n            <div className='col-4' align='center'>\n              <div>\n                <Basic diameter={100} min={0} max={135} step={45} value={params.degreeValue}\n                  theme={{\n                      defaultColor: '#333',\n                      activeColor: '#f33'\n                  }}\n                  onValueChange={params.setDegreeValue} ariaLabelledBy={'degree-label'}\n                >\n                    <label id={'degree-label'}>Degree</label>\n                </Basic>\n              </div>\n            </div>\n\n            <div className='col-4' align='center'>\n              <div>\n                <Basic diameter={100} min={2} \n                  max={\n                    params.degreeValue===0?params.cols:\n                    params.degreeValue===90?params.rows:\n                    params.rows>params.cols?params.cols:params.rows\n                  } \n                  step={1} value={params.distanceValue}\n                  theme={{\n                      defaultColor: '#333',\n                      activeColor: '#f33'\n                  }}\n                  onValueChange={params.setDistanceValue} ariaLabelledBy={'distance-label'}\n                >\n                    <label id={'distance-label'}>Distance</label>\n                </Basic>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nexport default GlcmProperties;","import React from 'react'\nimport ReactDOM from 'react-dom'\nvar SetMatrix=(params)=>{\n    return(\n        <div className=\"mt-3 m-sm-5 border p-4 p-sm-5\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2>Matrix Details</h2>\n            </div>\n          </div>\n            <div className=\"row\">\n                <div className=\"col-12 col-sm-4\">\n                <div className=\"form-outline\">\n                    <input type=\"text\" id=\"formRows\" className=\"form-control\" value={params.rows} onChange={params.customRows}/>\n                    <label className=\"form-label\" htmlFor=\"formRows\">Rows</label>\n                </div>\n                </div>\n                <div className=\"col-12 col-sm-4\">\n                <div className=\"form-outline\">\n                    <input type=\"text\" id=\"formCols\" className=\"form-control\" value={params.cols} onChange={params.customCols}/>\n                    <label className=\"form-label\" htmlFor=\"formCols\">Columns</label>\n                </div>\n                </div>\n            <div className=\"col-12 col-sm-4\">\n              <div className=\"form-outline\">\n                <button onClick={()=>params.setMatrix()} className=\"btn btn-success align-self-start\">Click to make Matrix</button>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nexport default SetMatrix;","import React, { useState } from 'react';\nimport './App.css';\nimport Glcm from './Glcm';\nimport MakeRandomMatrix from './MakeRandomMatrix';\nimport GlcmProperties from './GlcmProperties';\nimport SetMatrix from './SetMatrix';\n\nfunction App() {\n  var [rows, setRows]=useState(6);\n  var [cols, setCols]=useState(5);\n  var [degreeValue, setDegreeValue] = useState(0)\n  var [distanceValue, setDistnceValue] = useState(2)\n\n  let colourGlcm=[]\n  for(var ii=0;ii<8;ii++){\n      let innerColourGlcm=[]\n      for(var jj=0;jj<8;jj++)\n          innerColourGlcm.push(`#FFFFFF`)\n      colourGlcm.push(innerColourGlcm);\n  }\n  var [GlcmColour,setGlcmColour]=useState(colourGlcm);\n\n\n  var [randomMatrix,setRandomMatrix] =useState(MakeRandomMatrix(6,5));\n\n  var setMatrix=()=>{\n    setDegreeValue(0);\n    setDistnceValue(2);\n    setRandomMatrix(MakeRandomMatrix(rows,cols));\n  };\n\n  const customRows=(event)=>{\n    var num=parseInt(event.target.value);\n    setRows(isNaN(num)?0:num<3?3:num);\n  }\n  const customCols=(event)=>{\n    var num=parseInt(event.target.value);\n    setCols(isNaN(num)?0:num<3?3:num);\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        \n        <SetMatrix cols={cols} rows={rows} customCols={customCols} customRows={customRows} setMatrix={setMatrix}/>\n\n        <GlcmProperties degreeValue={degreeValue} setDegreeValue={setDegreeValue} distanceValue={distanceValue} setDistanceValue={setDistnceValue} rows={rows} cols={cols}/>\n\n        <div className='container'>\n          <div className='row'>\n            <div className=\"col-12\">\n              <div className=\"form-outline\">\n                <Glcm randomMatrix={randomMatrix} degreeValue={degreeValue} distanceValue={distanceValue} GlcmColour={GlcmColour} setGlcmColour={setGlcmColour}/>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}